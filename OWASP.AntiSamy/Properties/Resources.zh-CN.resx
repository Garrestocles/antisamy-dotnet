<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error.Size.TooLarge" xml:space="preserve">
    <value>输入太大。实际的输入为{0}字节。允许的最大输入为{1}字节。</value>
  </data>
  <data name="Error.Comment.Removed" xml:space="preserve">
    <value>出于安全的原因，注释域已被过滤。注释域的值为{0}</value>
  </data>
  <data name="Error.Tag.NotFound" xml:space="preserve">
    <value>出于安全的原因，标记{0}已被过滤。标记的内容保存不变。</value>
  </data>
  <data name="Error.Tag.Removed" xml:space="preserve">
    <value>出于安全的原因，标记{0}不被允许。此标记不应该影响输入的显示。</value>
  </data>
  <data name="Error.Tag.Filtered" xml:space="preserve">
    <value>出于安全的原因，标记{0}已被过滤。标记的内容保存不变。</value>
  </data>
  <data name="Error.Tag.Encoded" xml:space="preserve">
    <value>The {0} tag has been encoded for security reasons. The contents of the tag will remain in place.</value>
  </data>
  <data name="Error.Tag.Empty" xml:space="preserve">
    <value>在{0}的标签是空的，因此我们无法处理它。该邮件的其余部分是完整的，其搬迁应该没有任何副作用。</value>
  </data>
  <data name="Error.CData.Found" xml:space="preserve">
    <value>一个CDATA部分被发现，这是不允许的。该邮件的其余部分是完整的，其搬迁不应该有任何副作用。在CDATA的内容是 "{0}"。</value>
  </data>
  <data name="Error.Pi.Found" xml:space="preserve">
    <value>XML处理指令被发现，这是不允许的。消息的其余部分是完整的，其搬迁应该不会有任何副作用。该指令的内容为 "{0}"。</value>
  </data>
  <data name="Error.Attribute.NotFound" xml:space="preserve">
    <value>标记{0}包含一个没法处理的属性。属性{1}已被过滤，但标记保存不变。</value>
  </data>
  <data name="Error.Attribute.Invalid" xml:space="preserve">
    <value>标记{0}包含一个没法处理的属性。属性{1}包含一个值"{2}"。出于安全的原因，这个值没法被接受。为了处理这个输入，这个属性已被从这个标记中去掉，标记其他部分保持不变。</value>
  </data>
  <data name="Error.Attribute.Invalid.Filtered" xml:space="preserve">
    <value>标记{0}包含一个没法处理的属。属性{1}包含一个值"{2}"。出于安全的原因，这个值没法被接受。为了进一步处理这个输入，标记{0}已被过滤。</value>
  </data>
  <data name="Error.Attribute.Invalid.Encoded" xml:space="preserve">
    <value>The {0} tag contained an attribute that we could not process. The {1} attribute had a value of "{2}". This value could not be accepted for security reasons. We have chosen to encode the {0} tag in order to continue processing the input.</value>
  </data>
  <data name="Error.Attribute.Invalid.Removed" xml:space="preserve">
    <value>标记{0}包含一个没法处理的属性。属性{1}包含一个值"{2}"。出于安全的原因，这个值没法被接受。为了进一步处理这个输入，整个标记{0}已被去掉。</value>
  </data>
  <data name="Error.Css.Tag.Malformed" xml:space="preserve">
    <value>The stylesheet code "{0}" could not be parsed.</value>
  </data>
  <data name="Error.Css.Attribute.Malformed" xml:space="preserve">
    <value>The style attribute code "{0}" on the tag {1} could not be parsed.</value>
  </data>
  <data name="Error.Css.Import.Disabled" xml:space="preserve">
    <value>样式表的导入还没有被激活。</value>
  </data>
  <data name="Error.Css.Import.Exceeded" xml:space="preserve">
    <value>位于{0}的样式表超过允许导入的样式表的总数，因此该样式表没有被读取。允许导入的样式表的最大数目为{1}。</value>
  </data>
  <data name="Error.Css.Import.Failure" xml:space="preserve">
    <value>输入中含有的远程样式表位于{0}，此样式表没法被读取。网站可能关闭或者主机没法被访问。这不应该影响输入的格式。</value>
  </data>
  <data name="Error.Css.Import.TooLarge" xml:space="preserve">
    <value>位于{0}的样式表使得总输入太大，因此没有被导入。允许的最大输入为{1}字节。</value>
  </data>
  <data name="Error.Css.Import.Url.Invalid" xml:space="preserve">
    <value>出于安全的原因，用于导入样式表的url没法被接受。此url是{1}。 </value>
  </data>
  <data name="Error.Css.Stylesheet.Relative" xml:space="preserve">
    <value>样式表引用了一个没法读取的相对样式表"{0}"。</value>
  </data>
  <data name="Error.Css.Tag.Relative" xml:space="preserve">
    <value>标记{0}中的一个样式属性指定了一个没法读取的相对样式表应用"{0}"。</value>
  </data>
  <data name="Error.Css.Stylesheet.Rule.NotFound" xml:space="preserve">
    <value>样式表使用了一个不被支持的规则"{0}"。出于安全的原因，此规则已被去掉。</value>
  </data>
  <data name="Error.Css.Tag.Rule.NotFound" xml:space="preserve">
    <value>标记{0}中的一个样式属性使用了一个不被支持的规则"{0}"。出于安全的原因，此规则已被去掉。</value>
  </data>
  <data name="Error.Css.Stylesheet.Selector.NotFound" xml:space="preserve">
    <value>样式表使用了一个没法处理的选择器"{0}"。出于安全的原因，此选择器已被去掉。</value>
  </data>
  <data name="Error.Css.Tag.Selector.NotFound" xml:space="preserve">
    <value>标记{0}中的一个样式属性使用了一个没法处理的选择器"{0}"。出于安全的原因，此规则已被去掉。</value>
  </data>
  <data name="Error.Css.Stylesheet.Selector.Disallowed" xml:space="preserve">
    <value>样式表使用了一个选择器"{0}"。出于安全的原因，此选择器不被允许。</value>
  </data>
  <data name="Error.Css.Tag.Selector.Disallowed" xml:space="preserve">
    <value>标记{0}中的一个样式属性使用了一个选择器"{1}"。出于安全的原因，此选择器不被允许。</value>
  </data>
  <data name="Error.Css.Stylesheet.Property.Invalid" xml:space="preserve">
    <value>样式表含有一个属（property)"{0}"。出于安全的原因，此属性不被允许。</value>
  </data>
  <data name="Error.Css.Tag.Property.Invalid" xml:space="preserve">
    <value>标记{0}中含有一个样式属性"{1}"。出于安全的原因，此属性不被允许。</value>
  </data>
  <data name="Error.Culture.Invalid" xml:space="preserve">
    <value>Culture not supported by AntiSamy. Available cultures are: {0}.</value>
  </data>
  <data name="Error.Css.Rule.NotAllowed" xml:space="preserve">
    <value>The rule "{0}" is not allowed/supported and will be removed.</value>
  </data>
  <data name="Error.Css.Property.Value.Invalid" xml:space="preserve">
    <value>CSS value "{0}" is not allowed by any criteria.</value>
  </data>
  <data name="Error.Css.Property.SingleValue.Invalid" xml:space="preserve">
    <value>CSS value "{0}" in "{1}" is not allowed by any criteria.</value>
  </data>
</root>