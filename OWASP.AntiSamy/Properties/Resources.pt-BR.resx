<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error.Size.TooLarge" xml:space="preserve">
    <value>O entrada foi muito grande. O entrada especificado fue {0} bytes e o maximo é {1} bytes.</value>
  </data>
  <data name="Error.Comment.Removed" xml:space="preserve">
    <value>O comentário região foi filtrado para razões de segurança. O valor do região era {0}.</value>
  </data>
  <data name="Error.Tag.NotFound" xml:space="preserve">
    <value>A {0} etiqueta foi filtrada para razões de segurança. O conteúdo da etiqueta permanecerá.</value>
  </data>
  <data name="Error.Tag.Removed" xml:space="preserve">
    <value>A {0} etiqueta não é permitida para razões de segurança. Esta etiqueta não deve afetar a aparência da entrada.</value>
  </data>
  <data name="Error.Tag.Filtered" xml:space="preserve">
    <value>A {0} etiqueta foi filtrada para razões de segurança. O conteúdo da etiqueta permanecerá.</value>
  </data>
  <data name="Error.Tag.Encoded" xml:space="preserve">
    <value>The {0} tag has been encoded for security reasons. The contents of the tag will remain in place.</value>
  </data>
  <data name="Error.Tag.Empty" xml:space="preserve">
    <value>A {0} estava vazia e, portanto, não poderíamos processá-lo. O restante da mensagem está intacta, e sua retirada não deve ter nenhum efeito colateral.</value>
  </data>
  <data name="Error.CData.Found" xml:space="preserve">
    <value>Uma seção CDATA foi encontrado, o que não é permitido. O resto da mensagem está intacta, e sua retirada não deve ter quaisquer efeitos secundários. O conteúdo da CDATA foi "{0}".</value>
  </data>
  <data name="Error.Pi.Found" xml:space="preserve">
    <value>Uma instrução de processamento XML foi encontrado, o que não é permitido. O resto da mensagem está intacta, e sua retirada não deve ter quaisquer efeitos secundários. O conteúdo da instrução era "{0}".      </value>
  </data>
  <data name="Error.Attribute.NotFound" xml:space="preserve">
    <value>A {0} etiqueta contem um atributo que nós não podemos processor. A {1} atributo foi filtrada, pero a etiqueta permanecerá.</value>
  </data>
  <data name="Error.Attribute.Invalid" xml:space="preserve">
    <value>A {0} etiqueta contem um atributo que nós não podemos processor. A {1} atributo teve um valor de "{2}". Este valor não podia ser aceitado para razões de segurança. Decidimos eliminar este atributo da etiqueta e mantenha o resto de modo que possamos processar a entrada.</value>
  </data>
  <data name="Error.Attribute.Invalid.Filtered" xml:space="preserve">
    <value>A {0} etiqueta contem um atributo que nós não podemos processor. A {1} atributo teve um valor de "{2}". Este valor não podia ser aceitado para razões de segurança. Decidimos filtrar a {0} etiqueta para continuar processamento a entrada.</value>
  </data>
  <data name="Error.Attribute.Invalid.Encoded" xml:space="preserve">
    <value>The {0} tag contained an attribute that we could not process. The {1} attribute had a value of "{2}". This value could not be accepted for security reasons. We have chosen to encode the {0} tag in order to continue processing the input.</value>
  </data>
  <data name="Error.Attribute.Invalid.Removed" xml:space="preserve">
    <value>A {0} etiqueta contem um atributo que nós não podemos processor. A {1} atributo teve um valor de "{2}". Este valor não podia ser aceitado para razões de segurança. Decidimos eliminar o inteiro {0} etiqueta para continuar processamento a entrada.</value>
  </data>
  <data name="Error.Css.Tag.Malformed" xml:space="preserve">
    <value>The stylesheet code "{0}" could not be parsed.</value>
  </data>
  <data name="Error.Css.Attribute.Malformed" xml:space="preserve">
    <value>The style attribute code "{0}" on the tag {1} could not be parsed.</value>
  </data>
  <data name="Error.Css.Import.Disabled" xml:space="preserve">
    <value>Importar de stylesheets não foi capacitado.</value>
  </data>
  <data name="Error.Css.Import.Exceeded" xml:space="preserve">
    <value>O stylesheet localizou em {0} excede o total que número permitido de stylesheets ser importado e não foi recobrado. O número máximo de stylesheets importado é limitado a {1} stylesheets.</value>
  </data>
  <data name="Error.Css.Import.Failure" xml:space="preserve">
    <value>Não podia ser recobrado o stylesheet remoto referiu-se dentro da entrada, localizado em {0}. O site não pode ser acessível. Isto não pode afetar o formato da entrada.</value>
  </data>
  <data name="Error.Css.Import.TooLarge" xml:space="preserve">
    <value>O stylesheet localizou em {0} faz a entrada total ser demais grande e não foi importado. O tamanho máximo de toda entrada é limitado a {1} bytes.</value>
  </data>
  <data name="Error.Css.Import.Url.Invalid" xml:space="preserve">
    <value>O URL para o stylesheet importe não podia ser aceitado para razões de segurança. O URL era {1}</value>
  </data>
  <data name="Error.Css.Stylesheet.Relative" xml:space="preserve">
    <value>O stylesheet referiu-se um stylesheet relative, "{0}", que não podia ser recobrado.</value>
  </data>
  <data name="Error.Css.Tag.Relative" xml:space="preserve">
    <value>O {0} etiqueta contido um atributo de estilo que especificou uma referência relativa de stylesheet, "{0}", que não podia ser recobrado.</value>
  </data>
  <data name="Error.Css.Stylesheet.Rule.NotFound" xml:space="preserve">
    <value>O stylesheet usa uma regra, "{0}", que não é suportado. A regra foi eliminada para razões de segurança.</value>
  </data>
  <data name="Error.Css.Tag.Rule.NotFound" xml:space="preserve">
    <value>O {0} etiqueta contido um atributo de estilo que usa uma regra, "{0}", que não é suportado. A regra foi eliminada para razões de segurança.</value>
  </data>
  <data name="Error.Css.Stylesheet.Selector.NotFound" xml:space="preserve">
    <value>O stylesheetM/b&gt; usa um selector, "{0}", que não podia ser processado. Este selector foi eliminada para razões de segurança.</value>
  </data>
  <data name="Error.Css.Tag.Selector.NotFound" xml:space="preserve">
    <value>O {0} etiqueta contido um atributo de estilo que usa um selector, "{0}", que não podia ser processado. Este selector foi eliminada para razões de segurança.</value>
  </data>
  <data name="Error.Css.Stylesheet.Selector.Disallowed" xml:space="preserve">
    <value>O stylesheet teve um selector, "{0}", que não podia ser processado para razões de segurança.</value>
  </data>
  <data name="Error.Css.Tag.Selector.Disallowed" xml:space="preserve">
    <value>O {0} etiqueta contido um atributo que contido um selector, "{1}", que não podia ser permitido para razões de segurança.</value>
  </data>
  <data name="Error.Css.Stylesheet.Property.Invalid" xml:space="preserve">
    <value> O stylesheet teve uma propriedade, "{0}", que não podia ser permitido para razões de segurança.</value>
  </data>
  <data name="Error.Css.Tag.Property.Invalid" xml:space="preserve">
    <value>O {0} etiqueta contido um atributo de estilo, "{1}", que não podia ser permitido para razões de segurança.</value>
  </data>
  <data name="Error.Culture.NotSupported" xml:space="preserve">
    <value>Culture not supported by AntiSamy. Available cultures are: {0}.</value>
  </data>
</root>