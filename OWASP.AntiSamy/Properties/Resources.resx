<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error.Size.TooLarge" xml:space="preserve">
    <value>The input was too large. The specified input was {0} bytes and the maximum is {1} bytes.</value>
  </data>
  <data name="Error.Comment.Removed" xml:space="preserve">
    <value>The comment field was filtered out for security reasons. The value of the comment field was {0}.</value>
  </data>
  <data name="Error.Tag.NotFound" xml:space="preserve">
    <value>The {0} tag has been filtered for security reasons. The contents of the tag will remain in place.</value>
  </data>
  <data name="Error.Tag.Removed" xml:space="preserve">
    <value>The {0} tag is not allowed for security reasons. This tag should not affect the display of the input.</value>
  </data>
  <data name="Error.Tag.Filtered" xml:space="preserve">
    <value>The {0} tag has been filtered for security reasons. The contents of the tag will remain in place.</value>
  </data>
  <data name="Error.Tag.Encoded" xml:space="preserve">
    <value>The {0} tag has been encoded for security reasons. The contents of the tag will remain in place.</value>
  </data>
  <data name="Error.Tag.Empty" xml:space="preserve">
    <value>The {0} tag was empty, and therefore we could not process it. The rest of the message is intact, and its removal should not have any side effects.</value>
  </data>
  <data name="Error.CData.Found" xml:space="preserve">
    <value>A CDATA section was found, which is not allowed. The rest of the message is intact, and its removal should not have any side effects. The contents of the CDATA was "{0}".</value>
  </data>
  <data name="Error.Pi.Found" xml:space="preserve">
    <value>An XML processing instruction was found, which is not allowed. The rest of the message is intact, and its removal should not have any side effects. The contents of the instruction was "{0}".</value>
  </data>
  <data name="Error.Attribute.NotFound" xml:space="preserve">
    <value>The {0} tag contained an attribute that we could not process. The {1} attribute has been filtered out, but the tag is still in place. The value of the attribute was "{2}".</value>
  </data>
  <data name="Error.Attribute.Invalid" xml:space="preserve">
    <value>The {0} tag contained an attribute that we could not process. The {1} attribute had a value of "{2}". This value could not be accepted for security reasons. We have chosen to remove this attribute from the tag and leave everything else in place so that we could process the input.</value>
  </data>
  <data name="Error.Attribute.Invalid.Filtered" xml:space="preserve">
    <value>The {0} tag contained an attribute that we could not process. The {1} attribute had a value of "{2}". This value could not be accepted for security reasons. We have chosen to filter the {0} tag in order to continue processing the input.</value>
  </data>
  <data name="Error.Attribute.Invalid.Encoded" xml:space="preserve">
    <value>The {0} tag contained an attribute that we could not process. The {1} attribute had a value of "{2}". This value could not be accepted for security reasons. We have chosen to encode the {0} tag in order to continue processing the input.</value>
  </data>
  <data name="Error.Attribute.Invalid.Removed" xml:space="preserve">
    <value>The {0} tag contained an attribute that we could not process. The {1} attribute had a value of "{2}". This value could not be accepted for security reasons. We have chosen to remove the entire {0} tag in order to continue processing the input.</value>
  </data>
  <data name="Error.Css.Tag.Malformed" xml:space="preserve">
    <value>The stylesheet code "{0}" could not be parsed.</value>
  </data>
  <data name="Error.Css.Attribute.Malformed" xml:space="preserve">
    <value>The style attribute code "{0}" on the tag {1} could not be parsed.</value>
  </data>
  <data name="Error.Css.Import.Disabled" xml:space="preserve">
    <value>Importing of stylesheets has not been enabled.</value>
  </data>
  <data name="Error.Css.Import.Exceeded" xml:space="preserve">
    <value>The stylesheet located at {0} exceeds the total allowed number of stylesheets to be imported and was not retrieved. The maximum number of imported stylesheets is limited to {1} stylesheets.</value>
  </data>
  <data name="Error.Css.Import.Failure" xml:space="preserve">
    <value>The remote stylesheet found within the input, located at {0}, that could not be retrieved. The site may be down or at an unaccessible host. This may not affect the format of the input.</value>
  </data>
  <data name="Error.Css.Import.TooLarge" xml:space="preserve">
    <value>The stylesheet located at {0} causes the total input to be too large and was not imported. The maximum size of all input is limited to {1} bytes.</value>
  </data>
  <data name="Error.Css.Import.Url.Invalid" xml:space="preserve">
    <value>The URL for stylesheet import could not be accepted for security reasons. The url was {0}.</value>
  </data>
  <data name="Error.Css.Stylesheet.Relative" xml:space="preserve">
    <value>The stylesheet referenced a relative stylesheet, "{0}", that could not be retrieved.</value>
  </data>
  <data name="Error.Css.Tag.Relative" xml:space="preserve">
    <value>The {0} tag had a style attribute that specified a relative stylesheet reference, "{1}", that could not be retrieved.</value>
  </data>
  <data name="Error.Css.Stylesheet.Rule.NotFound" xml:space="preserve">
    <value>The stylesheet uses a rule, "{0}", that is not supported. The rule has been removed for security reasons.</value>
  </data>
  <data name="Error.Css.Tag.Rule.NotFound" xml:space="preserve">
    <value>The {0} tag had a style attribute that uses a rule, "{1}", that is not supported. The rule has been removed for security reasons.</value>
  </data>
  <data name="Error.Css.Stylesheet.Selector.NotFound" xml:space="preserve">
    <value>The stylesheet uses selector, "{0}", that could not be processed. The selector has been removed for security reasons.</value>
  </data>
  <data name="Error.Css.Tag.Selector.NotFound" xml:space="preserve">
    <value>The {0} tag had a style attribute that uses a selector, "{1}", that could not be processed. The selector has been removed for security reasons.</value>
  </data>
  <data name="Error.Css.Stylesheet.Selector.Disallowed" xml:space="preserve">
    <value>The stylesheet had a selector, "{0}", that could not be allowed for security reasons.</value>
  </data>
  <data name="Error.Css.Tag.Selector.Disallowed" xml:space="preserve">
    <value>The {0} tag had a style attribute that contained a selector, "{1}", that could not be allowed for security reasons.</value>
  </data>
  <data name="Error.Css.Stylesheet.Property.Invalid" xml:space="preserve">
    <value>The stylesheet had a property, "{0}", that could not be allowed for security reasons.</value>
  </data>
  <data name="Error.Css.Tag.Property.Invalid" xml:space="preserve">
    <value>The {0} tag had a style attribute, "{1}", that could not be allowed for security reasons.</value>
  </data>
  <data name="Error.Culture.NotSupported" xml:space="preserve">
    <value>Culture not supported by AntiSamy. Available cultures are: {0}.</value>
  </data>
  <data name="Error.Css.Rule.NotAllowed" xml:space="preserve">
    <value>The rule "{0}" is not allowed/supported and will be removed.</value>
  </data>
  <data name="Error.Css.Property.Value.Invalid" xml:space="preserve">
    <value>CSS value "{0}" is not allowed by any criteria.</value>
  </data>
  <data name="Error.Css.Property.SingleValue.Invalid" xml:space="preserve">
    <value>CSS value "{0}" in "{1}" is not allowed by any criteria.</value>
  </data>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="DEFAULT_ANTISAMY_POLICY_XML" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\antisamy.xml;System.String, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089;Windows-1252</value>
  </data>
</root>