<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="Error.Size.TooLarge" xml:space="preserve">
    <value>Il input è troppo grande. Il specificato input è stato {0} byte e il massimo è {1} byte</value>
  </data>
  <data name="Error.Comment.Removed" xml:space="preserve">
    <value>Il campo commento è stato filtrati per motivi di sicurezza. Il valore dei commenti è {0}.</value>
  </data>
  <data name="Error.Tag.NotFound" xml:space="preserve">
    <value>{0} tag è stata filtrata per motivi di sicurezza. Il contenuto del tag rimane sul posto.</value>
  </data>
  <data name="Error.Tag.Removed" xml:space="preserve">
    <value>{0} tag non è consentito per motivi di sicurezza. Questo tag non dovrebbe incidere sulla visualizzazione degli input.</value>
  </data>
  <data name="Error.Tag.Filtered" xml:space="preserve">
    <value>{0} tag è stata filtrata per motivi di sicurezza. Il contenuto del tag rimane sul posto.</value>
  </data>
  <data name="Error.Tag.Encoded" xml:space="preserve">
    <value>The {0} tag has been encoded for security reasons. The contents of the tag will remain in place.</value>
  </data>
  <data name="Error.Tag.Empty" xml:space="preserve">
    <value>{0} tag era vuoto, e quindi non abbiamo potuto processo di esso. Il resto del messaggio è intatta, e la sua rimozione non dovrebbe avere alcun effetto collaterale.</value>
  </data>
  <data name="Error.CData.Found" xml:space="preserve">
    <value>È stata individuata una sezione CDATA, che non è permessa. La rimozione non dovrebbe avere effetti collaterali, e il resto del messaggio è intatto. Il contenuto della sezione CDATA era "{0}".</value>
  </data>
  <data name="Error.Pi.Found" xml:space="preserve">
    <value>È stata individuata una istruzione di elaborazione XML, che non è permessa. La rimozione non dovrebbe avere effetti collaterali, e il resto del messaggio è intatto. Il contenuto dell'istruzione era "{0}".</value>
  </data>
  <data name="Error.Attribute.NotFound" xml:space="preserve">
    <value>{0} tag conteneva un attributo che non abbiamo potuto processo. {1} attributo è stata filtrata, ma tag rimane sul posto.</value>
  </data>
  <data name="Error.Attribute.Invalid" xml:space="preserve">
    <value>{0} tag conteneva un attributo che non abbiamo potuto processo. {1} attributo ha avuto un valore di "{2}". Questo valore non può essere accettato per ragioni di sicurezza. Abbiamo scelto di rimuovere questo attributo del tag e lasciare tutto il resto.</value>
  </data>
  <data name="Error.Attribute.Invalid.Filtered" xml:space="preserve">
    <value>{0} tag conteneva un attributo che non abbiamo potuto processo. {1} attributo ha avuto un valore di "{2}". Questo valore non può essere accettato per ragioni di sicurezza. Abbiamo scelto di filtrare il {0} tag.</value>
  </data>
  <data name="Error.Attribute.Invalid.Encoded" xml:space="preserve">
    <value>The {0} tag contained an attribute that we could not process. The {1} attribute had a value of "{2}". This value could not be accepted for security reasons. We have chosen to encode the {0} tag in order to continue processing the input.</value>
  </data>
  <data name="Error.Attribute.Invalid.Removed" xml:space="preserve">
    <value>{0} tag conteneva un attributo che non abbiamo potuto processo. {1} attributo ha avuto un valore di "{2}". Questo valore non può essere accettato per ragioni di sicurezza. Abbiamo scelto di rimuovere l'intera {0} tag.</value>
  </data>
  <data name="Error.Css.Tag.Malformed" xml:space="preserve">
    <value>The stylesheet code "{0}" could not be parsed.</value>
  </data>
  <data name="Error.Css.Attribute.Malformed" xml:space="preserve">
    <value>The style attribute code "{0}" on the tag {1} could not be parsed.</value>
  </data>
  <data name="Error.Css.Import.Disabled" xml:space="preserve">
    <value>Importazione di fogli di stile non è stato attivato.</value>
  </data>
  <data name="Error.Css.Import.Exceeded" xml:space="preserve">
    <value>Il foglio di stile a {0} supera il totale consentito numero di fogli di stile per essere importati e non è stato recuperato. Il numero massimo delle importazioni di fogli di stile è limitata a {1} fogli di stile.</value>
  </data>
  <data name="Error.Css.Import.Failure" xml:space="preserve">
    <value>Il foglio di stile esterno trovato, situato a  {0} , che non potevano essere recuperato. Il sito possono essere inattivi o accedere a un host. Questo non deve pregiudicare il formato di input.</value>
  </data>
  <data name="Error.Css.Import.TooLarge" xml:space="preserve">
    <value>Il foglio di stile situato a {0} fa il totale di input di essere troppo grande e non è stato importato. La dimensione massima di tutti gli input è limitato a {1} bytes.</value>
  </data>
  <data name="Error.Css.Import.Url.Invalid" xml:space="preserve">
    <value> L'URL del foglio di stile esterno non potrebbe essere accettato per ragioni di sicurezza. L'URL è stato {1}</value>
  </data>
  <data name="Error.Css.Stylesheet.Relative" xml:space="preserve">
    <value>Il foglio di stile di riferimento di stile parente, "{0}", che non potevano essere recuperati.</value>
  </data>
  <data name="Error.Css.Tag.Relative" xml:space="preserve">
    <value>{0} tag ha avuto un attributo di stile specificato che un parente di riferimento di stile, "{0}", che non possono essere recuperati.</value>
  </data>
  <data name="Error.Css.Stylesheet.Rule.NotFound" xml:space="preserve">
    <value>Il foglio di stile utilizza una regola, "{0}", che non è supportato. La regola è stata rimossa per motivi di sicurezza.</value>
  </data>
  <data name="Error.Css.Tag.Rule.NotFound" xml:space="preserve">
    <value>{0} tag ha avuto un attributo di stile che utilizza una regola, "{0}", che non è supportato. La regola è stata rimossa per motivi di sicurezza.</value>
  </data>
  <data name="Error.Css.Stylesheet.Selector.NotFound" xml:space="preserve">
    <value>Il foglio di stile utilizza selettore, "{0}", che non potevano essere trattati. Il selettore è stato rimosso per ragioni di sicurezza.</value>
  </data>
  <data name="Error.Css.Tag.Selector.NotFound" xml:space="preserve">
    <value>{0} tag ha avuto un attributo di stile che utilizza un selettore, "{0}", che non potevano essere trattati. Il selettore è stato rimosso per ragioni di sicurezza.</value>
  </data>
  <data name="Error.Css.Stylesheet.Selector.Disallowed" xml:space="preserve">
    <value>Il foglio di stile ha avuto un selettore, "{0}", che è vietato per motivi di sicurezza.</value>
  </data>
  <data name="Error.Css.Tag.Selector.Disallowed" xml:space="preserve">
    <value>{0} tag aveva uno stile attributo che conteneva un selettore, "{1}", che è vietato per motivi di sicurezza.</value>
  </data>
  <data name="Error.Css.Stylesheet.Property.Invalid" xml:space="preserve">
    <value>Il foglio di stile ha una proprietà, "{0}", che è vietato per motivi di sicurezza.</value>
  </data>
  <data name="Error.Css.Tag.Property.Invalid" xml:space="preserve">
    <value>{0} tag ha avuto un attributo di stile, "{1}", che è vietato per motivi di sicurezza.</value>
  </data>
  <data name="Error.Culture.NotSupported" xml:space="preserve">
    <value>Culture not supported by AntiSamy. Available cultures are: {0}.</value>
  </data>
</root>